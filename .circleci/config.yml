version: 2.1

executors:
  java-executor:
    docker:
      - image: gradle:8.13-jdk23
        environment:
          SPRING_PROFILES_ACTIVE: test
          DB_NAME: webgame
          DB_USER: root
          DB_PASS: Theprovince4x4!
      - image: mysql:8.0
        environment:
          MYSQL_DATABASE: webgame
          MYSQL_ROOT_PASSWORD: Theprovince4x4!
        command: >-
          mysqld --character-set-server=utf8mb4
                 --collation-server=utf8mb4_unicode_ci
    working_directory: ~/project

jobs:
  test-java:
    executor: java-executor
    steps:
      - checkout:
      	  path: ~/project
          
      - run:
          name: Wait for MySQL
          command: |
            for i in `seq 1 20`; do
              mysql -h 127.0.0.1 -P 3306 -u root -e "SELECT 1" && break
              echo "Waiting for MySQL..."
              sleep 3
            done

      - run:
          name: Make gradlew executable
          command: chmod +x ./web_game/gradlew

      - run:
          name: Run tests
          command: |
            ./web_game/gradlew test \
              --project-dir ./web_game \
              -i \

      - store_test_results:
          path: web_game/build/test-results

      - store_artifacts:
          path: web_game/build/reports

  build-and-deploy:
    docker:
      - image: cimg/base:stable
    environment:
      AWS_REGION: us-east-1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Images
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/web_game:latest ./web_game
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/web_game_front:latest ./web_game_interface/react-typescript
      - run:
          name: Push to Amazon ECR
          command: |
            aws --version
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/web_game:latest
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/web_game_front:latest
      - run:
          name: Deploy to ECS
          command: |
            aws ecs update-service \
              --cluster your-cluster-name \
              --service your-service-name \
              --force-new-deployment \
              --region $AWS_REGION

workflows:
  ci-cd-workflow:
    jobs:
      - test-java
      - build-and-deploy:
          requires:
            - test-java
